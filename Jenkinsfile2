#!groovy
def componentName
def componentTag
def lista
def componentAppName




pipeline {
	agent any
	   	environment {

		SCM_URL = "https://github.com/nazpot01/Pruebas.git"
	        SCM_CREDENTIALS = "123456789"
		SCM_BRANCH = "${BRANCH_NAME}"
		BRANCH_NAME= "RQ02" //variable
		}
		
	stages {
		stage('Test') {
                steps {
                    echo "[EXEC] - Obtener c√≥digo fuente desde repositorio Git"
				}
			}
	stage('Copy'){
		steps {
			script{
				sh"pwd"
				sh"git checkout origin/${BRANCH_NAME}"
				sh"mkdir /var/lib/jenkins/workspace/unicoprueba/archivos"
				lista=sh(returnStdout: true, script: 'git diff --name-only origin/master | while read -r line; do cp \${line} /var/lib/jenkins/workspace/unicoprueba/archivos ; done")
				//lista=sh(script: 'git diff --name-only origin/master  | grep -Ex ".*\\.[a-z]+"', returnStdout : true ).split('\n');
				def dir = new File("/var/lib/jenkins/workspace/unicoprueba/archivos")
				a = lista.size()
				println a
				componentTag = new String[a]
				componentAppName = new String[a]
				
				for(int i = 0; i < a; i++){
					componentTag[i] = lista[i].substring(lista[i].lastIndexOf('.') + 1, lista[i].length()).toUpperCase() // somefolder/app.ear -> EAR
					componentAppName[i] = lista[i].substring(Math.max(0, lista[i].lastIndexOf('/') + 1), lista[i].lastIndexOf('.')) // somefolder/app.ear -> app
					println componentTag[i]
					println componentAppName[i]
					sh"rm -R dir"
				}
					for(int i = 0; i < componentAppName.size(); i++) {
						componentTagCurrent = componentTag[i]
					        componentAppNameCurrent = componentAppName[i]
						artefact = sh(returnStdout: true, script: "(ls -p ${dir} | grep ${componentAppNameCurrent}.${componentTagCurrent}) || true")
						println ' extension ' + componentTagCurrent
						println  ' nombre ' + componentAppNameCurrent
						   step([$class: 'UCDeployPublisher',
							siteName: 'Connect_Jenkins_Ucd',
							component: [
							    $class: 'com.urbancode.jenkins.plugins.ucdeploy.VersionHelper$VersionBlock',
							    	componentName: componentAppNameCurrent,
								componentTag:  componentTagCurrent,
							    createComponent: [
								$class: 'com.urbancode.jenkins.plugins.ucdeploy.ComponentHelper$CreateComponentBlock',
								componentTemplate: '',
								componentApplication: 'UNICO_MANTENIMIENTO'
							    ],
							    delivery: [
								$class: 'com.urbancode.jenkins.plugins.ucdeploy.DeliveryHelper$Push',
								pushVersion: "${BUILD_NUMBER}",
								baseDir: '/var/lib/jenkins/workspace/unicoprueba',
								fileIncludePatterns: '',
								fileExcludePatterns: '',
								pushProperties: '',
								pushDescription: 'Pushed from Jenkins',
								pushIncremental: false
							    ]
							]
						    ])
					}
				}
			}
		}
		
	}
}
