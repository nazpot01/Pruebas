#!groovy
def componentName
def componentTag
def lista
def componentAppName



pipeline {
	agent any
	   	environment {

		SCM_URL = "https://github.com/nazpot01/Pruebas.git"
	        SCM_CREDENTIALS = "123456789"
		SCM_BRANCH = "${BRANCH_NAME}"
		BRANCH_NAME= "RQ01" //variable
		}
		
	stages {
		stage('Test') {
                steps {
                    echo "[EXEC] - Obtener c√≥digo fuente desde repositorio Git"
				}
			}
	stage('Copy'){
		steps {
			script{
				sh"pwd"
				sh"git checkout origin/${BRANCH_NAME}"
				lista=sh(script: 'git diff --name-only origin/master  | grep -Ex ".*\\.[a-z]+"', returnStdout : true ).split('\n');
				println lista[0]
				a = lista.length
				
				componentTag = new String[lista.length]
				componentAppName = new String[lista.length]
				
				for(int i = 0; i < lista.length; i++){
					componentTag[i] = lista[i].substring(lista[i].lastIndexOf('.') + 1, lista[i].length()).uppercase() // somefolder/app.ear -> EAR
					componentAppName[i] = lista[i].substring(Math.max(0, lista[i].lastIndexOf('/')), lista[i].lastIndexOf('.')) // somefolder/app.ear -> app
					
				}
			}
		}
	}
		stage('UPLOAD_COMPONENTS') {
			steps {
				script {
					for(int i = 0; i < componentAppName.length(); i++) {
						componentName : componentAppName[i]
						step([$class   : 'UCDeployPublisher',
							siteName : "${URBAN_PRD_APP}",
							component: [
								$class		: 'com.urbancode.jenkins.plugins.ucdeploy.VersionHelper$VersionBlock',
								componentName	: componentAppName[i],
								componentTag	: componentTag[i],
								createComponent: [
									$class		: 'com.urbancode.jenkins.plugins.ucdeploy.ComponentHelper$CreateComponentBlock',
									componentApplication: "${COMPONENT_APP}"
								],
								delivery       : [
									$class             : 'com.urbancode.jenkins.plugins.ucdeploy.DeliveryHelper$Push',
									pushVersion        : "${BUILD_ID}",
									baseDir            : "${WORKSPACE}",
									pushDescription    : 'Entrega de artefactos'
									
								]
							]
						])
					}
				}
			}
		}
	}
}
