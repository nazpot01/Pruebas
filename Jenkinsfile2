#!groovy
def pushProperties
def log
def tokens
def fileIncludePatterns = ''
def deploy = 0
def componentName
def componentTag
def componentAppName
def binder
def lista
def proyecto = "Unico"
def earName = "unico.ear"			//Modificar segun el nombre del ear.
def tipo = "EAR1"//Modificar segun el tipo de artefacto en mayusculas, las opciones son: EAR - JASPER - XML - JAR.


pipeline {
	agent any
	   	environment {

		SCM_URL = "https://github.com/nazpot01/Pruebas.git"
	        SCM_CREDENTIALS = "123456789"
		SCM_BRANCH = "${BRANCH_NAME}"
		BRANCH_NAME= "RQ01" //variable
		}
		
	stages {

		stage('test') {
                steps {
                    echo "[EXEC] - Obtener c√≥digo fuente desde repositorio Git"
				}
			}
		stage('copiado'){
		steps {
			script{
			sh"pwd"
			sh"git checkout origin/${BRANCH_NAME}"
			//sh"git diff --name-only origin/master | while read -r line; do cp \${line} /var/jenkins_home/workspace/unicoarchivos ; done"
			//sh"cp -r /var/jenkins_home/workspace/unicoarchivos /var/jenkins_home/workspace/Prueba_deploy/"
			sh"ls"
			lista=sh(script: "git diff --name-only origin/master", returnStdout : true ).split('\n');
				println lista[0]
				a = lista.length
				println a
				for(int i = 0; i < lista.length; i++){
					/*if(a>1){						
					n = Mensaje[2].indexOf(':')
					println n+" este es el index"
					if(n>=0){
					UCD_DEPLOY = 1
					}
					else UCD_DEPLOY = 0
					}
					if (UCD_DEPLOY == 1){
					println Mensaje[2] +" este es el mensaje"							
					list = Mensaje[2].split(':')						
					USSER = list[0]
					EMAIL = USSER+"@ath.com.co"
					println EMAIL
					UCD_COMPONENTS=list*/
				println lista[i];
				}
			}
		}
	}
}
