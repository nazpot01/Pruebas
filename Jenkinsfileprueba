#!groovy
def TAG = ""
def pushProperties
def log
def tokens
def fileIncludePatterns = ''
def componentName
def componentTag
def lista
def componentAppName
def proyecto = "Unico"
def earName = "unico.ear"			//Modificar segun el nombre del ear.
def tipo = "EAR1"					//Modificar segun el tipo de artefacto en mayusculas, las opciones son: EAR - JASPER - XML - JAR.


pipeline {
	agent any
	   	environment {

		SCM_URL = "https://github.com/nazpot01/Pruebas.git"
	        SCM_CREDENTIALS = "123456789"
		SCM_BRANCH = "${BRANCH_NAME}"
		BRANCH_NAME= "RQ01" //variable
		}
		
	stages {

		stage('test') {
                steps {
                    script{
					sh"pwd"
					step([$class: 'WsCleanup'])
					checkout([$class: 'GitSCM', branches: [[name: BRANCH_NAME]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: SCM_CREDENTIALS, url: 'https://github.com/nazpot01/Pruebas.git']]])
					sh('git log --format=%B -1 > '+Workspace+'/GIT_MESSAGE')
					Mensaje = readFile(Workspace+'/GIT_MESSAGE').trim()
					println Mensaje
					
					Mensaje = Mensaje.split('\n')
					a = Mensaje.length
					println a
								if(a>1){						
									n = Mensaje[2].indexOf(':build')
										println n+" este es el index"
										if(n>=0){
											UCD_DEPLOY = 1
										}
										else UCD_DEPLOY = 0
								}
						
							if (UCD_DEPLOY == 1){
									println Mensaje[2] +" este es el mensaje"							
									list = Mensaje[2].split(':')							
									TAG = list[0]
									println TAG
									echo'-------------------------------CHECKOUT TAG '+TAG+'-----------------------------------'
									checkout([$class: 'GitSCM', branches: [[name: 'refs/tags/'+TAG]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: SCM_CREDENTIALS, url: 'https://github.com/nazpot01/Pruebas']]])
							}
						}
				}
			}
		stage('copiado'){
		steps {
				sh"pwd"
				sh"git checkout origin/${BRANCH_NAME}"
				lista=sh(script: 'git diff --name-only origin/master  | grep -Ex ".*\\.[a-z]+"', returnStdout : true ).split('\n');
				a = lista.size()
				println a
				componentTag = new String[a]
				componentAppName = new String[a]
				
				for(int i = 0; i < a; i++){
					componentTag[i] = lista[i].substring(lista[i].lastIndexOf('.') + 1, lista[i].length()).toUpperCase() // somefolder/app.ear -> EAR
					componentAppName[i] = lista[i].substring(Math.max(0, lista[i].lastIndexOf('/') + 1), lista[i].lastIndexOf('.')) // somefolder/app.ear -> app
					println componentTag[i]
					println componentAppName[i]}
		
		}
	}
}
